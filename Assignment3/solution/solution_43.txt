from collections import Counter

def find_anagrams(s: str, p: str) -> list[int]:
    p_count = Counter(p)
    s_count = Counter(s[:len(p) - 1])
    res = []

    for i in range(len(p) - 1, len(s)):
        s_count[s[i]] = s_count.get(s[i], 0) + 1   # Include a new char in the window
        if s_count == p_count:   # This step is O(1), as there are at most 26 English letters
            res.append(i - len(p) + 1)   # append the starting index
        s_count[s[i - len(p) + 1]] -= 1   # decrease the count of oldest char in the window
        if s_count[s[i - len(p) + 1]] == 0:
            del s_count[s[i - len(p) + 1]]   # remove the count if it is 0

    return res
