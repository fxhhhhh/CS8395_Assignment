from collections import Counter, defaultdict

def min_window(s: str, t: str) -> str:
    if not s or not t:
        return ""

    dict_t = Counter(t)
    dict_s = defaultdict(int)

    formed = 0
    l, r = 0, 0

    ans = float('inf'), None, None

    while r < len(s):
        character = s[r]
        dict_s[character] += 1

        if character in dict_t and dict_s[character] == dict_t[character]:
            formed += 1

        while l <= r and formed == len(dict_t):
            character = s[l]

            if r - l + 1 < ans[0]:
                ans = (r - l + 1, l, r)

            dict_s[character] -= 1
            if character in dict_t and dict_s[character] < dict_t[character]:
                formed -= 1
            l += 1
        r += 1

    return "" if ans[0] == float('inf') else s[ans[1]: ans[2] + 1]
